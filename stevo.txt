const imageDisplay = document.getElementById("img-display");
const gameTitle = document.getElementById("gamename");
const outputSelect = document.querySelector('#select-output');

const searchTerm = document.querySelector('#input-character-name');
const outputList = document.getElementById("list-output");


const games = 'https://api.rawg.io/api/games?key=9e964982120146cc851596cc31421048';

fetch(games)
	.then(response => response.json())
	.then(response => console.log(response))
	.catch(err => console.error(err));

let gameName = "";

//Initialise the app with data to produce a select for the characters
initData();

//Check to see if a character selection is made
outputSelect.addEventListener('ionChange', getDetails);



//-------------------------------------------------------------------

function getDetails(){
  //fetch a response from the API, then get the json object from that response 
  //and then examine json object to get relevant information for the app output
  //and if an error, output error
  fetch(games).then(getJson).then(updateDisplay).catch(reportError);
}


function getJson(aResponse){  //fetch response from API
  return aResponse.json();
}


//-------------------------------------------------------------------
function updateDisplay(jsonObj){ 

  

  let gameObjArray = jsonObj;       //get json object from response
                                    //jsonObj is an array of character objects

  //Check to see if user input matches a character
  for (let agameObj of gameObjArray){   
    if (agameObj.title === outputSelect.value){
      gameObj = agameObj;
    }  
  }
  //console.log(charObj);

  let gameName = gameObj.title;      //Get character name
  gameTitle.textContent = gameObj.title; //Set title to be character name
  let gameImageURL = gameObj.img;   //Get character image
  imageDisplay.src= gameImageURL;    //Set image to be character image
  
  removeAllListItems();             //remove all previous list items
  makeDetailsList(gameObj)          //Create list of character attributes underneath image
}

//-------------------------------------------------------------------

function reportError(anError){
  //console.log(anError);
}
//-------------------------------------------------------------------

function getgameNameInput(){
  //console.log(searchTerm.value);
  return searchTerm.value;
  //return "Walter White";
}
//-------------------------------------------------------------------

function makeDetailsList(agameObj){
  let gamePropertyList = ["title", "rating", "platform", "released"];
  
  for (let gameProperty of gamePropertyList){
    const newItem = document.createElement('ion-item');
    let outputText = gameProperty.toUpperCase() + ":   " + agameObj[gameProperty];
    newItem.textContent = outputText;

    outputList.appendChild(newItem);
  }
}

function removeAllListItems(){
  while (outputList.lastElementChild) {
    outputList.removeChild(outputList.lastElementChild);
  }
}


//-------------------------------------------------------------------

function initData(){
  fetch(games).then(getJson).then(initSelect).then(reportError);  
}
//-------------------------------------------------------------------

function initSelect(jsonObj){

  let gameObjectArray = jsonObj;
  //console.log(characterObjectArray);
  let gameNamesArray = [];

  for (let gameObject of gameObjectArray){
    gameNamesArray.push(gameObject.title);
  }
  //console.log(characterNamesArray);
  buildSelectOptions(gameNamesArray);
}
//-------------------------------------------------------------------

function buildSelectOptions(anArrayOfgameNames){
  
  for (let gameName of anArrayOfgameNames){
    createSelectOption(gameName)
  }
}
//-------------------------------------------------------------------
function createSelectOption(aName){
  const newItem = document.createElement('ion-select-option');
  newItem.value = aName;
  newItem.textContent = aName.toUpperCase();

  outputSelect.appendChild(newItem);  
}
//-------------------------------------------------------------------
